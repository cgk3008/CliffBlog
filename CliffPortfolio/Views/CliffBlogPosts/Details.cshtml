@model CliffPortfolio.Models.CliffBlogPost
@*@using CliffPortfolio.Models;*@
@*@model CliffPortfolio.Models.BlogComment*@

@{
	ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
	<h4>CliffBlogPost</h4>
	<hr />
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.Created)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Created)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Updated)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Updated)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Title)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Title)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MediaURL)

		</dt>

		<dd>
			@*@Html.DisplayFor(model => model.MediaURL)*@
			<img class="img-responsive" src="@Model.MediaURL" alt="">
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Body)
		</dt>
		<dd>
			@*@Html.DisplayFor(model => model.Body)  copied code from Index pasted below, had to change item to Model*@
			@Html.Raw(Model.Body)
		</dd>

		@if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
		{

			<dt>
				@Html.DisplayNameFor(model => model.Published)
			</dt>

			<dd>
				@Html.DisplayFor(model => model.Published)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.Slug)
			</dt>

			<dd>
				@Html.DisplayFor(model => model.Slug)
			</dd>
		}
	</dl>
</div>

@*show list of comments

	use foreach like the Index page*@


@using (Html.BeginForm("Create", "BlogComments"))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Comments</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	@foreach (var comm in Model.Comments)

	{
	<div class="col-md-offset-2 col-md-10">
		<ul class="post-footer">
			<li>@Html.DisplayFor(model => comm.AuthorId)| @Html.DisplayFor(model => comm.Created)</li>
			
			<li>@Html.DisplayFor(model => comm.Body)</li>						
		</ul>
	</div>		
	}

	@*@Html.Partial("_CommentsPartial", new BlogComment() { PostId = Model.Id })*@

	<input name="PostId" value="@Model.Id" hidden />
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">

			<textarea name="Body"  rows="10" cols="80">
                ENTER TEXT
            </textarea>

			[HttpGet]
        public ActionResult Authorize()
        {
            var claims = new ClaimsPrincipal(User).Claims.ToArray();
            var identity = new ClaimsIdentity(claims, "Bearer");
            AuthenticationManager.SignIn(identity);
            return new EmptyResult();
        }


			<input type="submit" value="Submit Comment" class="btn btn-default" />
		</div>
	</div>
</div>
}


<p>
	@if (User.IsInRole("Admin"))
	{
		@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) <t>|</t>

		@Html.ActionLink("Delete", "Delete", new { id = Model.Id }) <t>|</t>
	}

	@Html.ActionLink("Back to List", "Index")
</p>



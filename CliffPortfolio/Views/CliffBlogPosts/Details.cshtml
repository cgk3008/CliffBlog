@model CliffPortfolio.Models.CliffBlogPost

@*@model CliffPortfolio.Models.BlogComment*@

@{
	ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
	<h4>CliffBlogPost</h4>
	<hr />
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.Created)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Created)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Updated)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Updated)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Title)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Title)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.MediaURL)

		</dt>

		<dd>
			@*@Html.DisplayFor(model => model.MediaURL)*@
			<img class="img-responsive" src="@Model.MediaURL" alt="">
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Body)
		</dt>
		<dd>
			@*@Html.DisplayFor(model => model.Body)  copied code from Index pasted below, had to change item to Model*@
			@Html.Raw(Model.Body)
		</dd>

		@if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
		{

			<dt>
				@Html.DisplayNameFor(model => model.Published)
			</dt>

			<dd>
				@Html.DisplayFor(model => model.Published)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.Slug)
			</dt>

			<dd>
				@Html.DisplayFor(model => model.Slug)
			</dd>
		}
	</dl>
</div>

@*show list of comments

	use foreach like the Index page*@

@*@foreach (var comm in Model)

{
	@Html.DisplayFor(model => comm.Comments)
}*@

@using (Html.BeginForm("Create", "BlogComments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Comments</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)
		@*@Html.HiddenFor(model => model.Created)
			@Html.HiddenFor(model => model.Updated)
			@Html.HiddenFor(model => model.Title)
			@Html.HiddenFor(model => model.Body)
			@Html.HiddenFor(model => model.MediaURL)
			@Html.HiddenFor(model => model.Published)
			@Html.HiddenFor(model => model.Slug)*@

		<div class="form-group">
			@Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })							
			</div>
		</div>


		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" @*name="Comments"*@ value="Submit Comment" class="btn btn-default" />
			</div>
		</div>
	</div>
}


<p>
	@if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
	{
		@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) <t>|</t>

		@Html.ActionLink("Delete", "Delete", new { id = Model.Id }) <t>|</t>
	}

	@Html.ActionLink("Back to List", "Index")
</p>


